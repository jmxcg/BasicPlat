<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
  <!--读取数据库配置信息 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list merge="default">
        <value>/WEB-INF/database.properties</value> 
      </list>
    </property>
  </bean>

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="false">
    <property name="driverClassName" value="${jdbc.wechat.driverClassName}"/>
    <property name="url" value="${jdbc.wechat.url}"/>
    <property name="username" value="${jdbc.wechat.username}"/>
    <property name="password" value="${jdbc.wechat.password}"/>
    <property name="initialSize" value="30"/>
    <property name="maxActive" value="50"/>
    <property name="maxWait" value="60000"/>
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxOpenPreparedStatements" value="30"/>
  </bean>
  <!-- 配置另一个数据源的示例
  <bean id="otherDS" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="false">
    <property name="driverClassName" value="${jdbc.test.driverClassName}"/>
    <property name="url" value="${jdbc.test.url}"/>
    <property name="username" value="${jdbc.test.username}"/>
    <property name="password" value="${jdbc.test.password}"/>
    <property name="initialSize" value="30"/>
    <property name="maxActive" value="50"/>
    <property name="maxWait" value="60000"/>
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxOpenPreparedStatements" value="30"/>
  </bean>
  -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="sqlSessionFactory" class="com.gmteam.framework.ext.spring.mybatis.MySqlSessionFactoryBean">
    <property name="configLocations">
      <list merge="default">
        <value>classpath*:mybatisConfig\frameworkMybatis.xml</value>
        <value>classpath*:mybatisConfig\*.mappers.cfg.xml</value>
      </list>
    </property>
    <!--备选方案
    <property name="mapperLocations">
      <list merge="default">
        <value>classpath*:my\*\sql\*_mapper.xml</value>
      </list>
    </property> -->
    <property name="databaseType" value="mysql"/>
    <property name="dataSource" ref="dataSource"/>
    <property name="transactionFactory">
      <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
    </property>
  </bean>

  <bean id="defaultDAO" class="com.gmteam.framework.core.dao.mybatis.MybatisDAO"  scope="prototype" init-method="initialize">
    <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
  </bean>

  <!-- 平台缓存池-->
  <bean id="cachePool" class=" com.gmteam.framework.core.cache.CachePool">
    <property name="caches">
      <map>
        <entry key="0" value-ref="cacheFrameworkManager"/>
        <!-- <entry key="0" value-ref="cacheGisSmManager"/> -->
        <!-- <entry key="1" value-ref="cacheBjlqManager"/>  -->
      </map>
    </property>
  </bean>

  <context:annotation-config/>
</beans>
