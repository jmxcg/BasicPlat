<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

  <mvc:resources mapping="/resources/**" location="/resources/"/>

  <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
  <context:component-scan base-package="com.gmteam.framework.component" use-default-filters="false">
    <context:include-filter type="regex" expression=".*.web.*Controller"/>
  </context:component-scan>

  <!-- 符合Spring3.5之后的配置；支持自动把object转变为json串的配置 -->
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <property name="messageConverters">
      <list>
        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
          <property name ="supportedMediaTypes">    
            <list>
              <value>text/plain;charset=UTF-8</value>
              <value>text/html;charset=UTF-8</value>
            </list>
          </property>
        </bean>
        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
          <property name="supportedMediaTypes">
            <list>
              <value>application/json;charset=UTF-8</value>
            </list>
          </property>
        </bean>
      </list>
    </property>
  </bean>

  <!-- 处理文件上传 -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
    <property name="defaultEncoding" value="utf-8"/> <!-- 默认编码 (ISO-8859-1) -->
    <property name="maxInMemorySize" value="10240"/> <!-- 最大内存大小 (10240)-->
    <property name="maxUploadSize" value="52428800"/> <!-- 5000kb最大文件大小，这个属性的限制不针对单个文件，而是所有文件的容量之和，-1为无限止(-1) -->
    <property name="uploadTempDir" value="/tempUpload/"/> <!-- 此路径为临时路径上传后的目录名 (WebUtils#TEMP_DIR_CONTEXT_ATTRIBUTE) -->
    <property name="resolveLazily" value="true"/> <!--resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常-->
  </bean>

  <!-- 以下为文件上传的测试代码 -->
  <bean name="/uploadtest.do" class="com.gmteam.framework.component.fileUploadDownload.SimpleFileUploadController">
    <property name="savePath" value="abc"/> <!-- 保存的路径 -->
    <property name="filePrefix" value="aabbcc"/> <!-- 保存文件的前缀名 -->
    <property name="conflictType" value="1"/> <!-- 冲突规则：默认=0命名规则顺序加1，类似windows，这是默认方式，若进行10次仍然重名，则随机删除重名文件删除掉；=1，覆盖同名的文件 -->
    <property name="breakOnOneFaild" value="true"/> <!-- 某一文件上传失败后的处理模式：默认=false,某一文件上传失败后，仍然处理后续文件；=true,某一文件上传失败后，上传终止，后续文件不进行处理了 -->
    <property name="datePathModel" value="3"/> <!-- 是否按照日期模式生成保存文件名，默认=0,不做任何处理；=1按日期模式生成文件夹；=2按日期模式生成文件名；=3按日期模式生成文件夹和文件名 -->
    <property name="storeFileNameFieldName" value="sFile"/> <!-- 保存上传文件存储文件名的界面字段名称，与前台页面中的内容相互匹配,若不设置，则按照默认的字段名称"storeFilename"从前台页面获取保存文件的名称。 -->
  </bean>

  <!-- 以下为文件上传的测试代码 -->
  <bean name="/uploadtest1.do" class="com.gmteam.framework.component.fileUploadDownload.SimpleFileUploadController">
  </bean>
</beans>